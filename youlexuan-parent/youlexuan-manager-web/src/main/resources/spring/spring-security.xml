<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- 配置 favicon.ico不进行安全拦截-->
    <http pattern="/favicon.ico" security="none"/>
    <!--
        登录页和登录失败页不进行安全拦截
        security="none"  设置此资源不被拦截.
        如果没有设置登录页security="none",登录页会被反复重定向而报错
    -->
    <http pattern="/login.html" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>

    <!-- 页面拦截规则 -->
    <!--
        1.use-expressions 为是否使用 Spring 表达式语言（ SpEL ）配置访问控制 - 默认为true
            若true, 则拦截的配置应该写成:<intercept-url pattern="/**" access="hasRole('ROLE_SUPERVISOR')" />
            若false, 则拦截的配置应该写成:<intercept-url pattern="/**" access="ROLE_USER" />
            语法不同而已
        2.ROLE_USER：必须验证通过后才能访问
        3.intercept-url 表示拦截页面:
            /*  表示的是该目录下的资源，只包括本级目录不包括下级目录
            /** 表示的是该目录以及该目录下所有级别子目录的资源
        4.form-login  为开启表单登陆
        5.login-page：指定登录页面。
        6.authentication-failure-url：指定了身份验证失败时跳转到的页面。
        7.default-target-url：指定了成功进行身份验证和授权后默认呈现给用户的页面。
        8.csrf disabled="true"  关闭csrf ,如果不加会出现错误. 注:CSRF（Cross-site request forgery）跨站请求伪造,是一种对网站的恶意利用.
    -->
    <http use-expressions="false">
        <intercept-url pattern="/**" access="ROLE_USER"/>
        <form-login login-page="/login.html" default-target-url="/admin/index.html"
                    authentication-failure-url="/login.html"/>
        <csrf disabled="true"/>

        <!-- 退出登录 -->
        <!--
           加此配置后，会自动的产生退出登录的地址/logout - 默认退出到登录页
           如果不想用这个地址,也可以定义生成的退出地址以及跳转的页面，配置如下:
           <logout logout-url="" logout-success-url=""/>
           logout-url:退出的地址
           logout-success-url:退出后跳转的地址, 不填写默认停留在当前页
        -->
        <logout/>
    </http>

    <!-- 认证管理器 -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
    </authentication-provider>
    </authentication-manager>
            <!-- 定义自定义认证类 -->
    <beans:bean id="userDetailService" class="com.offcn.sellergoods.service.impl.UserDetailsServiceImpl">
    </beans:bean>
</beans:beans>

